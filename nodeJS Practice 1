const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    prompt: 'Choose an option (1-4): '
});

let employees = [];

function showMenu() {
    console.log(`
=============================
 Employee Management System
=============================
1. Add Employee
2. List Employees
3. Remove Employee
4. Exit
`);
    rl.prompt();
}

function addEmployee() {
    rl.question('Enter employee name: ', (name) => {
        rl.question('Enter employee ID: ', (id) => {
            const nameTrimmed = name.trim();
            const idTrimmed = id.trim();

            if (employees.find(emp => emp.id === idTrimmed)) {
                console.log(`Employee with ID ${idTrimmed} already exists.`);
            } else {
                employees.push({ name: nameTrimmed, id: idTrimmed });
                console.log(`Employee ${nameTrimmed} added successfully!`);
            }
            showMenu();
        });
    });
}

function listEmployees() {
    console.log();
    if (employees.length === 0) {
        console.log('No employees found.');
    } else {
        console.log('--- Employee List ---');
        employees.forEach((emp, index) => {
            console.log(`${index + 1}. ID: ${emp.id}, Name: ${emp.name}`);
        });
    }
    console.log();
    showMenu();
}

function removeEmployee() {
    rl.question('Enter employee ID to remove: ', (id) => {
        const idTrimmed = id.trim();
        const index = employees.findIndex(emp => emp.id === idTrimmed);
        if (index !== -1) {
            const removed = employees.splice(index, 1);
            console.log(`Employee ${removed[0].name} removed successfully!`);
        } else {
            console.log(`No employee found with ID ${idTrimmed}.`);
        }
        showMenu();
    });
}

rl.on('line', (input) => {
    const choice = input.trim();
    switch (choice) {
        case '1':
            addEmployee();
            break;
        case '2':
            listEmployees();
            break;
        case '3':
            removeEmployee();
            break;
        case '4':
            console.log('Exiting...');
            rl.close();
            process.exit(0); // ensures the app exits immediately
            break;
        default:
            console.log('Invalid choice, try again.');
            showMenu();
    }
});

rl.on('SIGINT', () => {
    console.log('\nExiting...');
    rl.close();
    process.exit(0); // ensures exit on Ctrl+C
});

showMenu();
